affine Matrix_MaxPlus { P, M, N, I1, J1 | P > 100 && M > 2 && N > 4 && M < P && N < P && 0 <= I1 <= M-1 && 0<=J1<= M-1 && I1 <= J1-2 }
input
   float _InputOutput{ i1,j1, i2, j2 | 0<=i1<=j1<=M-1 && 0<=i2<=N && 0<=j2<=N-1};
output
   float _Output { i2, j2| 0<=i2<=N && 0<=j2<=N-1 };
let
	_Output[i2, j2] = case { |i2 == N} : _InputOutput[I1, J1, i2, j2];
	         		       { |i2 < N } : reduce(min, [k1, k2], {|I1<=k1<=J1-2 && 0<=k2<=N-1} : 
	         		       	                    _InputOutput[I1, k1+1, i2, k2] + _InputOutput[k1+1, J1, k2+1, j2]);
	         		  esac;    
		    						         
.