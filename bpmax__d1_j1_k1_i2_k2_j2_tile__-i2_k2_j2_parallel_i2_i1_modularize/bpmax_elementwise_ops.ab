float e_intra_score (int,int) ;
float e_inter_score (int,int) ;

affine bpmax_elementwise_ops{M, N, I1, J1| M>=8 && N>=8 && 0<=I1<=J1<=M-1}

input
	int seq1 {i| 0 <= i < M} ;
	int seq2 {i| 0 <= i < N} ;
	float S1 {i,j| 0 <= i <= j < M };
	float S2 {i,j| 0 <= i <= j < N };
	float FTable_4D  {i1,j1,i2,j2| 0<=i1<=j1<=M-1 && 0<=i2<=j2<=N-1};
	
output
	float FTable_2D  {i,j| 0<=i<=j<=N-1};
	  
let
	 FTable_2D[i2, j2] = case
		{ | I1<= J1  && j2< i2} : S1[I1, J1];
		{ | J1 < I1  && i2<=j2} : S2[i2, j2];
		{ | I1 == J1 && i2 == j2} : e_inter_score(seq1[I1], seq2[N-i2-1]); 
		{ | I1<J1 && i2<j2} || {|I1 ==J1 && i2<j2} || {|I1<J1 && i2==j2} : 			
		        max(case {|J1-I1 >  3}: FTable_4D[I1+1, J1-1, i2, j2] + e_intra_score(seq1[I1], seq1[J1]);
				       {|J1-I1 <= 3}: 0; esac,
			     case  {|j2-i2  > 3}: FTable_4D[I1, J1, i2+1, j2-1] + e_intra_score(seq2[N-i2-1], seq2[N-j2-1]);
			 	       {|j2-i2  <=3}: 0; esac, 
			 	       S1[I1, J1] + S2[i2, j2]);
		esac;
.
